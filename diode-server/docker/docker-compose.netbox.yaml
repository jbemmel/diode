version: '3.8'
services:
  netbox: &netbox
    image: netboxcommunity/netbox:v3.7-2.8.0-diode
    build:
      context: .
      dockerfile: netbox/Dockerfile-diode
    depends_on:
      - netbox-postgres
      - netbox-redis
      - netbox-redis-cache
    env_file: netbox/env/netbox.env
    user: 'unit:root'
    healthcheck:
      start_period: 60s
      timeout: 3s
      interval: 15s
      test: "curl -f http://localhost:8080/api/ || exit 1"
    volumes:
      - ./diode/netbox_diode_plugin:/opt/netbox/netbox/netbox_diode_plugin:rw
      - ./netbox/configuration:/etc/netbox/config:z,ro
      - ./netbox/launch-netbox.sh:/opt/netbox/launch-netbox.sh:z,ro
      - netbox-media-files:/opt/netbox/netbox/media:rw
      - netbox-reports-files:/opt/netbox/netbox/reports:rw
      - netbox-scripts-files:/opt/netbox/netbox/scripts:rw
    ports:
      - "8000:8080"
  netbox-worker:
    <<: *netbox
    depends_on:
      netbox:
        condition: service_healthy
    ports: [ ]
    command:
      - /opt/netbox/venv/bin/python
      - /opt/netbox/netbox/manage.py
      - rqworker
    healthcheck:
      start_period: 20s
      timeout: 3s
      interval: 15s
      test: "ps -aux | grep -v grep | grep -q rqworker || exit 1"
  netbox-diode-plugin-configurator:
    <<: *netbox
    depends_on:
      netbox:
        condition: service_healthy
    ports: [ ]
    env_file: netbox/env/netbox.env
    command:
      - /opt/netbox/venv/bin/python
      - /opt/netbox/netbox/manage.py
      - configurediodeplugin
      - --diode-to-netbox-api-key=${DIODE_TO_NETBOX_API_KEY}
      - --netbox-to-diode-api-key=${NETBOX_TO_DIODE_API_KEY}
      - --ingestion-api-key=${INGESTION_API_KEY}
  # postgres
  netbox-postgres:
    image: docker.io/postgres:16-alpine
    env_file: netbox/env/postgres.env
    volumes:
      - netbox-postgres-data:/var/lib/postgresql/data

  # redis
  netbox-redis:
    image: docker.io/redis:7-alpine
    command:
      - sh
      - -c # this is to evaluate the $REDIS_PASSWORD from the env
      - redis-server --appendonly yes --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: netbox/env/redis.env
    volumes:
      - netbox-redis-data:/data
  netbox-redis-cache:
    image: docker.io/redis:7-alpine
    command:
      - sh
      - -c # this is to evaluate the $REDIS_PASSWORD from the env
      - redis-server --requirepass $$REDIS_PASSWORD ## $$ because of docker-compose
    env_file: netbox/env/redis-cache.env
    volumes:
      - netbox-redis-cache-data:/data

volumes:
  netbox-media-files:
    driver: local
  netbox-postgres-data:
    driver: local
  netbox-redis-cache-data:
    driver: local
  netbox-redis-data:
    driver: local
  netbox-reports-files:
    driver: local
  netbox-scripts-files:
    driver: local
