name: Python Netbox plugin - release
on:
  workflow_dispatch:
  push:
    branches: [release]
    paths:
      - "diode-netbox-plugin/**"
env:
  GH_TOKEN: ${{ secrets.ORB_CI_GH_TOKEN }}
  SEMANTIC_RELEASE_PACKAGE: ${{ github.repository }}
  APP_DIR: diode-netbox-plugin
  PYTHON_RUNTIME_VERSION: "3.11"
  PYTHON_PACKAGE_NAME: netboxlabs-diode-netbox-plugin

jobs:
  get-next-version:
    uses: netboxlabs/diode/.github/workflows/reusable_semantic_release_get_next_version.yaml@develop
    with:
      # passed vars need hard coding - https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations
      app_name: diode-netbox-plugin
      app_dir: diode-netbox-plugin
    secrets: inherit

  build:
    name: Build
    needs: [get-next-version]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ${{ env.APP_DIR }}
    env:
      BUILD_VERSION: ${{ needs.get-next-version.outputs.new-release-version }}
      BUILD_TRACK: release
      BUILD_COMMIT: ${{ needs.get-next-version.outputs.short-sha }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_RUNTIME_VERSION }}
      - name: Insert version variables into Python
        run: |
          sed -i "s/__commit_hash__ = .*/__commit_hash__ = \"${BUILD_COMMIT}\"/" netbox_diode_plugin/version.py
          sed -i "s/__track__ = .*/__track__ = \"${BUILD_TRACK}\"/" netbox_diode_plugin/version.py
          sed -i "s/__version__ = .*/__version__ = \"${BUILD_VERSION}\"/" netbox_diode_plugin/version.py
      - name: Display contents of version.py
        run: cat netbox_diode_plugin/version.py
      - name: Build sdist package
        run: |
          pip install toml-cli
          toml set --toml-path pyproject.toml project.version ${{ env.BUILD_VERSION }}
          cat pyproject.toml | grep version
          python3 -m pip install --upgrade build
          python3 -m build --sdist --outdir dist/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PYTHON_PACKAGE_NAME }}-${{ env.BUILD_VERSION }}.tar.gz
          path: ${{ env.APP_DIR }}/dist/${{ env.PYTHON_PACKAGE_NAME }}-${{ env.BUILD_VERSION }}.tar.gz
          retention-days: 30
          if-no-files-found: error
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ${{ env.APP_DIR }}/dist

  semantic-release:
    uses: netboxlabs/diode/.github/workflows/reusable_semantic_release.yaml@develop
    needs: [build]
    with:
      app_dir: diode-netbox-plugin
    secrets: inherit
